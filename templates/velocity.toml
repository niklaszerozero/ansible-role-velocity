# Config version. Do not change this
config-version = "2.7"

# What port should the proxy be bound to? By default, we'll bind to all addresses on port 25565.
bind = "{{ velocity_bind_addr }}"

# What should be the MOTD? This gets displayed when the player adds your server to
# their server list. Only MiniMessage format is accepted.
motd = "{{ velocity_motd }}"

# What should we display for the maximum number of players? (Velocity does not support a cap
# on the number of players online.)
show-max-players = {{ velocity_show_max_players }}

# Should we authenticate players with Mojang? By default, this is on.
online-mode = {{ velocity_online_mode | string | lower }}

# Should the proxy enforce the new public key security standard? By default, this is on.
force-key-authentication = {{ velocity_force_key_authentication | string | lower }}

# If client's ISP/AS sent from this proxy is different from the one from Mojang's
# authentication server, the player is kicked. This disallows some VPN and proxy
# connections but is a weak form of protection.
prevent-client-proxy-connections = {{ velocity_prevent_client_proxy_connections | string | lower }}

# Should we forward IP addresses and other data to backend servers?
# Available options:
# - "none":        No forwarding will be done. All players will appear to be connecting
#                  from the proxy and will have offline-mode UUIDs.
# - "legacy":      Forward player IPs and UUIDs in a BungeeCord-compatible format. Use this
#                  if you run servers using Minecraft 1.12 or lower.
# - "bungeeguard": Forward player IPs and UUIDs in a format supported by the BungeeGuard
#                  plugin. Use this if you run servers using Minecraft 1.12 or lower, and are
#                  unable to implement network level firewalling (on a shared host).
# - "modern":      Forward player IPs and UUIDs as part of the login process using
#                  Velocity's native forwarding. Only applicable for Minecraft 1.13 or higher.
player-info-forwarding-mode = "{{ velocity_player_info_forwarding_mode }}"

# If you are using modern or BungeeGuard IP forwarding, configure a file that contains a unique secret here.
# The file is expected to be UTF-8 encoded and not empty.
forwarding-secret-file = "forwarding.secret"

# Announce whether or not your server supports Forge. If you run a modded server, we
# suggest turning this on.
#
# If your network runs one modpack consistently, consider using ping-passthrough = "mods"
# instead for a nicer display in the server list.
announce-forge = {{ velocity_announce_forge | string | lower }}

# If enabled (default is false) and the proxy is in online mode, Velocity will kick
# any existing player who is online if a duplicate connection attempt is made.
kick-existing-players = {{ velocity_kick_existing_players | string | lower }}

# Should Velocity pass server list ping requests to a backend server?
# Available options:
# - "disabled":    No pass-through will be done. The velocity.toml and server-icon.png
#                  will determine the initial server list ping response.
# - "mods":        Passes only the mod list from your backend server into the response.
#                  The first server in your try list (or forced host) with a mod list will be
#                  used. If no backend servers can be contacted, Velocity won't display any
#                  mod information.
# - "description": Uses the description and mod list from the backend server. The first
#                  server in the try (or forced host) list that responds is used for the
#                  description and mod list.
# - "all":         Uses the backend server's response as the proxy response. The Velocity
#                  configuration is used if no servers could be contacted.
ping-passthrough = "{{ velocity_ping_passthrough }}"

# If enabled (default is false), then a sample of the online players on the proxy will be visible
# when hovering over the player count in the server list.
# This doesn't have any effect when ping passthrough is set to either "description" or "all".
sample-players-in-ping = {{ velocity_sample_players_in_ping | string | lower }}

# If not enabled (default is true) player IP addresses will be replaced by <ip address withheld> in logs
enable-player-address-logging = {{ velocity_enable_player_address_logging | string | lower }}

[servers]
# Configure your servers here. Each key represents the server's name, and the value
# represents the IP address of the server to connect to.
{% for server in velocity_servers %}
{{ server.name }} = "{{ server.addr }}"
{% endfor %}

# In what order we should try servers when a player logs in or is kicked from a server.
try = [
{% for name in velocity_try %}
    "{{ name }}"{% if not loop.last %},{% endif %}{{ '' }}
{% endfor %}
]

[forced-hosts]
# Configure your forced hosts here.
{% if velocity_forced_hosts %}
{% for host, targets in velocity_forced_hosts.items() %}
"{{ host }}" = [
{% for target in targets %}
    "{{ target }}"{% if not loop.last %},{% endif %}{{ '' }}
{% endfor %}
]
{% endfor %}
{% endif %}

[advanced]
# How large a Minecraft packet has to be before we compress it. Setting this to zero will
# compress all packets, and setting it to -1 will disable compression entirely.
compression-threshold = {{ velocity_advanced_compression_threshold }}

# How much compression should be done (from 0-9). The default is -1, which uses the
# default level of 6.
compression-level = {{ velocity_advanced_compression_level }}

# How fast (in milliseconds) are clients allowed to connect after the last connection? By
# default, this is three seconds. Disable this by setting this to 0.
login-ratelimit = {{ velocity_advanced_login_ratelimit }}

# Specify a custom timeout for connection timeouts here. The default is five seconds.
connection-timeout = {{ velocity_advanced_connection_timeout }}

# Specify a read timeout for connections here. The default is 30 seconds.
read-timeout = {{ velocity_advanced_read_timeout }}

# Enables compatibility with HAProxy's PROXY protocol. If you don't know what this is for, then
# don't enable it.
haproxy-protocol = {{ velocity_advanced_haproxy_protocol | string | lower }}

# Enables TCP fast open support on the proxy. Requires the proxy to run on Linux.
tcp-fast-open = {{ velocity_advanced_tcp_fast_open | string | lower }}

# Enables BungeeCord plugin messaging channel support on Velocity.
bungee-plugin-message-channel = {{ velocity_advanced_bungee_plugin_message_channel | string | lower }}

# Shows ping requests to the proxy from clients.
show-ping-requests = {{ velocity_advanced_show_ping_requests | string | lower }}

# By default, Velocity will attempt to gracefully handle situations where the user unexpectedly
# loses connection to the server without an explicit disconnect message by attempting to fall the
# user back, except in the case of read timeouts. BungeeCord will disconnect the user instead. You
# can disable this setting to use the BungeeCord behavior.
failover-on-unexpected-server-disconnect = {{ velocity_advanced_failover_on_unexpected_server_disconnect | string | lower }}

# Declares the proxy commands to 1.13+ clients.
announce-proxy-commands = {{ velocity_advanced_announce_proxy_commands | string | lower }}

# Enables the logging of commands
log-command-executions = {{ velocity_advanced_log_command_executions | string | lower }}

# Enables logging of player connections when connecting to the proxy, switching servers
# and disconnecting from the proxy.
log-player-connections = {{ velocity_advanced_log_player_connections | string | lower }}

# Allows players transferred from other hosts via the
# Transfer packet (Minecraft 1.20.5) to be received.
accepts-transfers = {{ velocity_advanced_accepts_transfers | string | lower }}

# Enables support for SO_REUSEPORT. This may help the proxy scale better on multicore systems
# with a lot of incoming connections, and provide better CPU utilization than the existing
# strategy of having a single thread accepting connections and distributing them to worker
# threads. Disabled by default. Requires Linux or macOS.
enable-reuse-port = {{ velocity_advanced_enable_reuse_port | string | lower }}

# How fast (in milliseconds) are clients allowed to send commands after the last command
# By default this is 50ms (20 commands per second)
command-rate-limit = {{ velocity_advanced_command_rate_limit }}

# Should we forward commands to the backend upon being rate limited?
# This will forward the command to the server instead of processing it on the proxy.
# Since most server implementations have a rate limit, this will prevent the player
# from being able to send excessive commands to the server.
forward-commands-if-rate-limited = {{ velocity_advanced_forward_commands_if_rate_limited | string | lower }}

# How many commands are allowed to be sent after the rate limit is hit before the player is kicked?
# Setting this to 0 or lower will disable this feature.
kick-after-rate-limited-commands = {{ velocity_advanced_kick_after_rate_limited_commands }}

# How fast (in milliseconds) are clients allowed to send tab completions after the last tab completion
tab-complete-rate-limit = {{ velocity_advanced_tab_complete_rate_limit }}

# How many tab completions are allowed to be sent after the rate limit is hit before the player is kicked?
# Setting this to 0 or lower will disable this feature.
kick-after-rate-limited-tab-completes = {{ velocity_advanced_kick_after_rate_limited_tab_completes }}

[query]
# Whether to enable responding to GameSpy 4 query responses or not.
enabled = {{ velocity_query_enabled | string | lower }}

# If query is enabled, on what port should the query protocol listen on?
port = {{ velocity_query_port }}

# This is the map name that is reported to the query services.
map = "{{ velocity_query_map }}"

# Whether plugins should be shown in query response by default or not
show-plugins = {{ velocity_query_show_plugins | string | lower }}
