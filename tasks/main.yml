---
###
# Setup prerequisites
###

- name: Install prerequisites (Debian/Ubuntu)
  ansible.builtin.include_tasks: install-prerequisites-debian.yml
  when: ansible_os_family == "Debian"

- name: Create Velocity group
  ansible.builtin.group:
    name: "{{ velocity_group }}"
    state: present

- name: Create Velocity user
  ansible.builtin.user:
    comment: Velocity user
    name: "{{ velocity_user }}"
    group: "{{ velocity_group }}"
    shell: /sbin/nologin
    create_home: false
    state: present

- name: Ensure velocity_path exists
  ansible.builtin.file:
    path: "{{ velocity_path }}"
    owner: "{{ velocity_user }}"
    group: "{{ velocity_group }}"
    state: directory

###
# Install Java
###

- name: Install Java (Debian/Ubuntu)
  ansible.builtin.include_tasks: install-java-debian.yml
  when: ansible_os_family == "Debian"

###
# Install Velocity
###

- name: List Velocity builds
  ansible.builtin.uri:
    url: https://fill.papermc.io/v3/projects/velocity/versions/{{ velocity_version }}/builds/latest
    return_content: true
  register: velocity_api_build

- name: Download Velocity
  ansible.builtin.get_url:
    url: "{{ velocity_api_build.json.downloads['server:default'].url }}"
    checksum: sha256:{{ velocity_checksum | default(velocity_api_build.json.downloads['server:default'].checksums.sha256) }}
    dest: "{{ velocity_path }}/velocity.jar"
    owner: "{{ velocity_user }}"
    group: "{{ velocity_group }}"
    mode: u=rw,go=r

- name: Remove forwarding.secret
  ansible.builtin.file:
    path: "{{ velocity_path }}/forwarding.secret"
    state: absent
  when: velocity_forwarding_secret | default('') | length == 0

- name: Create forwarding.secret
  ansible.builtin.copy:
    content: "{{ velocity_forwarding_secret }}"
    dest: "{{ velocity_path }}/forwarding.secret"
    owner: "{{ velocity_user }}"
    group: "{{ velocity_group }}"
    mode: u=rw,go=r
  when: velocity_forwarding_secret | default('') | length > 0

- name: Sync plugins
  block:
    - name: Ensure target plugin directory exists
      ansible.builtin.file:
        path: "{{ velocity_path }}/plugins"
        state: directory
        owner: "{{ velocity_user }}"
        group: "{{ velocity_group }}"
        mode: "u=rwx,go=rx"

    - name: Remove all existing .jar files in plugin directory
      ansible.builtin.find:
        paths: "{{ velocity_path }}/plugins"
        patterns: "*.jar"
      register: old_plugins

    - name: Delete found .jar files
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ old_plugins.files }}"
      when: old_plugins.matched > 0

    - name: Copy all plugin files
      ansible.builtin.copy:
        src: "{{ velocity_plugins_src }}"
        dest: "{{ velocity_path }}/plugins/"
        owner: "{{ velocity_user }}"
        group: "{{ velocity_group }}"
        mode: u=rw,go=r

  when:
    - velocity_plugins_src is defined
    - velocity_plugins_src | length > 0
    - velocity_plugins_src is directory

- name: Copy config
  ansible.builtin.template:
    src: "{{ velocity_config }}"
    dest: "{{ velocity_path }}/velocity.toml"
    owner: "{{ velocity_user }}"
    group: "{{ velocity_group }}"
    mode: u=rw,go=r
  notify: restart velocity

- name: Install service (Debian/Ubuntu)
  ansible.builtin.include_tasks: install-service-debian.yml
  when: ansible_os_family == "Debian"
